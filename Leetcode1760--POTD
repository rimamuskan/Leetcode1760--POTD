class Solution {
public:
bool havePenalty(vector<int>& nums, int maxOperations , int x){
int needOperation=0;
for(int i=0;i<nums.size();++i){
int balls=nums[i];
if(balls > x){
needOperation+=(balls-1)/x;
if(needOperation>maxOperations){
    return false;
}
}

}
return true;

}
    int minimumSize(vector<int>& nums, int maxOperations) {
int left =1;
int right=*max_element(nums.begin(),nums.end());
int result =right;
while(left<=right){
    int mid=left+ (right -left)/2;
   if( havePenalty(nums,maxOperations,mid)){
    result=mid;
right=mid-1;

   }
   else{
    left =mid+1;
   }

}
return result;
        
    }
};
